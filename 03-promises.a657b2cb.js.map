{"mappings":"AAEA,MAAMA,EAAQC,SAASC,cAAc,yBAC/BC,EAAOF,SAASC,cAAc,wBAC9BE,EAASH,SAASC,cAAc,0BAChCG,EAAOJ,SAASC,cAAc,QAGpC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFO,QAAQC,IAAI,WACZJ,EAAQ,CAAEK,SAAAX,EAAUY,MAAAX,MAGpBQ,QAAQC,IAAI,SACZH,EAAO,CAAEI,SAAAX,EAAUY,MAAAX,I,GAEpBA,EAAM,IAGRY,MAAK,EAACF,SAAEA,EAAUC,MAAAE,MACjBL,QAAQC,IAAI,sBAAoBC,QAAiBG,OAC1C,C,SAAEH,EAAUC,MAAAE,MAEpBC,OAAM,EAACJ,SAAEA,EAAUC,MAAAI,MAClBP,QAAQC,IAAI,qBAAmBC,OAAcK,MAAU,G,CAK7DC,YAAY,CAACL,EAAOM,EAAMC,KACxB,IAAIC,EAAO,EACX,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAC5BA,IACFD,EAAOE,OAAOF,GAAME,OAAOJ,IAE7BnB,EAAcsB,EAAGD,E,EAYrBtB,EAAKyB,iBAAiB,UARLC,IACfA,EAAMC,iBACN,MAAMC,EAAajC,EAAMkC,MACnBC,EAAYhC,EAAK+B,MACjBE,EAAchC,EAAO8B,MAC3BlB,QAAQC,IAAIgB,EAAYE,EAAWC,GACnCZ,YAAYS,EAAYE,EAAWC,EAAY","sources":["src/js/03-promises.js"],"sourcesContent":["// const { formats } = require(\"flatpickr/dist/utils/formatting\");\n\nconst delay = document.querySelector('input[name = \"delay\"]');\nconst step = document.querySelector('input[name = \"step\"]')\nconst amount = document.querySelector('input[name = \"amount\"]');\nconst form = document.querySelector(\"form\")\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        console.log('Success');\n        resolve({ position, delay })\n      }\n      else {\n        console.log('Error')\n        reject({ position, delay })\n      }\n    }, delay);\n\n  })\n    .then(({ position, delay }) => {\n      console.log(`✅Fulfilled promise ${position} in ${delay}ms`)\n      return { position, delay };\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌Rejected ptomise ${position} in${delay}ms`)\n    }\n    );\n}\n\npromiseStep=(delay, step, amount) => {\n  let time = 0;\n  for (let i = 1; i <= amount; i += 1) {\n    if (i) {\n      time = Number(time)+Number(step)\n    }\n    createPromise(i, time);\n  }\n}\n\nconst onSubmit = event => {\n  event.preventDefault();\n  const delayValue = delay.value;\n  const stepValue = step.value;\n  const amountValue = amount.value;\n  console.log(delayValue, stepValue, amountValue);\n  promiseStep(delayValue, stepValue, amountValue);\n}\nform.addEventListener('submit',onSubmit)\n\n\n// count += 1;\n//   }, 1000);\n// });\n\n//  if (count===5) {\n//     clearInterval(intervalID);\n//     console.log(`Interval with id ${intervalID} has stopped!`);\n//   }\n\n"],"names":["$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$form","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","position","delay","then","delay2","catch","delay3","promiseStep","step1","amount1","time","i","Number","addEventListener","event","preventDefault","delayValue","value","stepValue","amountValue"],"version":3,"file":"03-promises.a657b2cb.js.map"}