{"mappings":"YAEA,IAAMA,EAAaC,SAASC,cAAc,yBACpCC,EAAYF,SAASC,cAAc,wBACnCE,EAAcH,SAASC,cAAc,0BAG3C,SAASG,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,GACFO,QAAQC,IAAI,WACZJ,EAAQ,CAAEN,WAAUC,YAGpBQ,QAAQC,IAAI,SACZH,EAAO,CAAEP,WAAUC,U,GAEpBA,E,IAdMN,SAASC,cAAc,SAkB/Be,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBAQN,IAPA,IAAMC,EAASF,EAAMG,cAAcC,SAC/BC,EAAQC,OAAOJ,EAAOb,MAAMkB,OAC5BC,EAAOF,OAAOJ,EAAOM,KAAKD,OAC1BE,EAASH,OAAOJ,EAAOO,OAAOF,OAIzBG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDvB,EAAcuB,EAAUL,GACrBM,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBQ,QAAQC,IAAI,uBAAwCe,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAE3DyB,OAAM,SAAAF,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBQ,QAAQC,IAAI,sBAAqCe,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAO3DgB,GAASG,EAEXX,QAAQC,IAAIhB,EAAWyB,MAAMtB,EAAUsB,MAAMrB,EAAYqB,OAQzDzB,EAAWyB,MAAS,GACpBtB,EAAUsB,MAAQ,GAClBrB,EAAYqB,MAAS,E","sources":["src/js/03-promises.js"],"sourcesContent":["// const { formats } = require(\"flatpickr/dist/utils/formatting\");\n\nconst delayInput = document.querySelector('input[name = \"delay\"]');\nconst stepInput = document.querySelector('input[name = \"step\"]')\nconst amountInput = document.querySelector('input[name = \"amount\"]');\nconst form = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        console.log('Success');\n        resolve({ position, delay })\n      }\n      else {\n        console.log('Error')\n        reject({ position, delay })\n      }\n    }, delay);\n  })\n}\n\nform.addEventListener('submit', onSubmit)\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const formEl = event.currentTarget.elements;\n  let delay = Number(formEl.delay.value);\n  let step = Number(formEl.step.value);\n  let amount = Number(formEl.amount.value);\n  \n  // const cickleMaker = () => {\n  //   let time = 0;\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    // if (amount === 1) {\n    //   delay = delay;\n    // }else{\n    //   delay=delay + step;\n    // }\n    delay += step;\n  }\n  console.log(delayInput.value,stepInput.value,amountInput.value)\n     clearInput(); \n}\n\n\n\n  \nfunction clearInput() {\n  delayInput.value = ``;\n  stepInput.value= ``;\n  amountInput.value = ``;\n}\n\n\n\n"],"names":["$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","console","log","addEventListener","event","preventDefault","formEl","currentTarget","elements","delay1","Number","value","step","amount","position1","then","param","concat","catch"],"version":3,"file":"03-promises.88b134df.js.map"}